#include <shared/colors.fxsub>

float Shitkai_Shadow(float ndotl, float value){
    value = value * 2.0 + -1.0;
    float shadow = ndotl + value;
    shadow = saturate(shadow);

    bool check = shadow>=0.40625;
    shadow = check ? 1.0 : 0.0;

    return shadow;
}


float3 Shitkai_Coloring(float3 shadow, float x){
    float3 Color1 = saturate(shadow.x * shadow.x);
    float3 Color2 = saturate(shadow.x * 2.0 + -1.0);


    float3 DefaultSkinColor = skinColorTable[_CharacterId];
    #ifdef _DefaultSkinColor
    DefaultSkinColor = _DefaultSkinColor;
    #endif
    float3 Shadow1SkinColor = skinShadow1Table[_CharacterId];
    #ifdef _Shadow1SkinColor
    Shadow1SkinColor = _Shadow1SkinColor;
    #endif
    float3 Shadow2SkinColor = skinShadow2Table[_CharacterId];
    #ifdef _Shadow2SkinColor
    Shadow2SkinColor = _Shadow2SkinColor;
    #endif

    float3 skinValue = DefaultSkinColor.xyz + (-Shadow1SkinColor.xyz);
    skinValue = Color2.xxx * skinValue.xyz + Shadow1SkinColor.xyz;

    float3 skinValue2 = skinValue.xyz + (-Shadow2SkinColor.xyz);
    skinValue2 = Color1.xxx * skinValue2.xyz + Shadow2SkinColor.xyz;

    float checkValue = x >= 0.5;
    
    checkValue = (checkValue) ? 1.0 : 0.0;
    Color2.xyz = (-shadow.xyz) + skinValue2.xyz;
    Color1.xyz = checkValue.xxx * Color2.xyz + shadow.xyz;

    return Color1;
}

float4x4 light_bone : CONTROLOBJECT < string name = "Rim_Light.pmx"; string item = "Rim_Rot"; >;

float Shitkai_Rim(float ndotv, float3 normal){
    float rim_mask = dot(normal, -normalize(light_bone._31_32_33) );
    rim_mask  = max(rim_mask,0.0);
    float rim_mask2 = dot(normal, -normalize(light_bone._31_32_33) );
    rim_mask2 = max(rim_mask2,0.0);

    rim_mask = (-rim_mask) + 0.0500000007f;
    
    float u_xlati2 = step(0.0f, rim_mask);
    float u_xlati19 = step(rim_mask, 0.0f);

    u_xlati19 = (-u_xlati2) + u_xlati19;
    ndotv *= u_xlati19;
    ndotv = rim_mask2 * ndotv;

    bool check = ndotv>=_RimThreshold;
    ndotv = check ? 1.0 : 0.0;
    

    return ndotv;

}