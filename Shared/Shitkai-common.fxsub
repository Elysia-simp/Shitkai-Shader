#include <shared/colors.fxsub>

float Shitkai_Shadow(float ndotl, float value) {
    float shadow = ndotl + value * 2.0 - 1.0;
    shadow = clamp(shadow, 0.0, 1.0);
    return step(0.40625, shadow);
}




float3 Shitkai_Coloring(float3 shadow, float x){
    float3 Color1 = saturate(shadow.x * shadow.x);
    float3 Color2 = saturate(shadow.x * 2.0 + -1.0);


    float3 DefaultSkinColor = skinColorTable[_CharacterId];
    #ifdef _DefaultSkinColor
    DefaultSkinColor = _DefaultSkinColor;
    #endif

    float3 Shadow1SkinColor = skinShadow1Table[_CharacterId];
    #ifdef _Shadow1SkinColor
    Shadow1SkinColor = _Shadow1SkinColor;
    #endif

    float3 Shadow2SkinColor = skinShadow2Table[_CharacterId];
    #ifdef _Shadow2SkinColor
    Shadow2SkinColor = _Shadow2SkinColor;
    #endif

    float3 skinValue = DefaultSkinColor.xyz + (-Shadow1SkinColor.xyz);
    skinValue = Color2.xxx * skinValue.xyz + Shadow1SkinColor.xyz;

    float3 skinValue2 = skinValue.xyz + (-Shadow2SkinColor.xyz);
    skinValue2 = Color1.xxx * skinValue2.xyz + Shadow2SkinColor.xyz;

    float checkValue = x >= 0.5;
    
    checkValue = (checkValue) ? 1.0 : 0.0;
    Color2.xyz = (-shadow.xyz) + skinValue2.xyz;
    Color1.xyz = checkValue.xxx * Color2.xyz + shadow.xyz;

    return Color1;
}

float4x4 light_bone : CONTROLOBJECT < string name = RimLight_Bone; string item = "Rim_Rot"; >;

float Shitkai_Rim(float ndotv, float3 normal, float3 view) {
    float3 lightDirection = normalize(light_bone._31_32_33);
    float rim_mask = max(0.0, -dot(normal, lightDirection));
    float rim_mask2 = max(0.0, -dot(normal, lightDirection));

    rim_mask = 0.0500000007 - rim_mask;

    float u_xlati2 = step(0.0, rim_mask);
    float u_xlati19 = 1.0 - u_xlati2;

    ndotv *= u_xlati19;
    ndotv *= rim_mask2;

    //bool check = ndotv >= _RimThreshold;
    //ndotv = check ? 1.0 : 0.0;
    ndotv = step(_RimThreshold, ndotv);

    return ndotv;
}



float test(float ndotl, float ndotv){
    return 1.0;
}

float3 test(float3 ndotl, float3 ndotv){
    return float3(1.0f,1.0f,1.0f);
}